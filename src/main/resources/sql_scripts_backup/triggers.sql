DROP TRIGGER IF EXISTS CUSTOMERS_INSERT;
DROP TRIGGER IF EXISTS TOURS_INSERT_INSERT;
DROP TRIGGER IF EXISTS ATTRACTIONS_INSERT;
DROP TRIGGER IF EXISTS RESERVATIONS_INSERT;
DROP TRIGGER IF EXISTS CUSTOMERS_UPDATE;
DROP TRIGGER IF EXISTS TOURS_UPDATE;
DROP TRIGGER IF EXISTS ATTRACTIONS_UPDATE;
DROP TRIGGER IF EXISTS RESERVATIONS_UPDATE;
DROP TRIGGER IF EXISTS CUSTOMERS_DELETE;
DROP TRIGGER IF EXISTS TOURS_DELETE;
DROP TRIGGER IF EXISTS ATTRACTIONS_DELETE;
DROP TRIGGER IF EXISTS RESERVATIONS_DELETE;


DELIMITER $$

CREATE TRIGGER CUSTOMERS_INSERT
    AFTER INSERT
    ON CUSTOMERS
    FOR EACH ROW
BEGIN
    INSERT INTO CUSTOMERS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_NAME, NEW_LASTNAME, NEW_EMAIL, NEW_PHONE_NUMBER,
                               NEW_ACCOUNT_CREATION_DATE, NEW_SUBSCRIBER, NEW_ACTIVE)
    VALUES (CURTIME(), 'INSERT', NEW.id, NEW.NAME, NEW.LASTNAME, NEW.EMAIL, NEW.PHONE_NUMBER, NEW.ACCOUNT_CREATION_DATE,
            NEW.SUBSCRIBER, NEW.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER TOURS_INSERT
    AFTER INSERT
    ON TOURS
    FOR EACH ROW
BEGIN
    INSERT INTO TOURS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_NAME, NEW_COUNTRY, NEW_DESCRIPTION, NEW_START_DATE,
                           NEW_END_DATE, NEW_START_LOCATION, NEW_END_LOCATION, NEW_PRICE_EURO, NEW_ACTIVE)
    VALUES (CURTIME(), 'INSERT', NEW.id, NEW.NAME, NEW.COUNTRY, NEW.DESCRIPTION, NEW.START_DATE, NEW.END_DATE,
            NEW.START_LOCATION, NEW.END_LOCATION, NEW.PRICE_EURO, NEW.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER ATTRACTIONS_INSERT
    AFTER INSERT
    ON ATTRACTIONS
    FOR EACH ROW
BEGIN
    INSERT INTO ATTRACTIONS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_LOCATION_ID, NEW_CITY, NEW_NAME, NEW_DESCRIPTION,
                                 NEW_CATEGORY, NEW_TITLE, NEW_PRICE_EURO, NEW_ACTIVE)
    VALUES (CURTIME(), 'INSERT', NEW.id, NEW.LOCATION_ID, NEW.CITY, NEW.NAME, NEW.DESCRIPTION, NEW.CATEGORY, NEW.TITLE,
            NEW.PRICE_EURO, NEW.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER RESERVATIONS_INSERT
    AFTER INSERT
    ON RESERVATIONS
    FOR EACH ROW
BEGIN
    INSERT INTO RESERVATIONS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_TOUR_ID, NEW_CUSTOMER_ID, NEW_RESERVATION_DATE,
                                  NEW_PAYMENT_STATUS, NEW_RESERVATION_STATUS, NEW_ACTIVE)
    VALUES (CURTIME(), 'INSERT', NEW.id, NEW.TOUR_ID, NEW.CUSTOMER_ID, NEW.RESERVATION_DATE, NEW.PAYMENT_STATUS,
            NEW.RESERVATION_STATUS, NEW.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER CUSTOMERS_UPDATE
    AFTER UPDATE
    ON CUSTOMERS
    FOR EACH ROW
BEGIN
    INSERT INTO CUSTOMERS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_NAME, NEW_LASTNAME, NEW_EMAIL, NEW_PHONE_NUMBER,
                               NEW_ACCOUNT_CREATION_DATE, NEW_SUBSCRIBER, NEW_ACTIVE, OLD_NAME, OLD_LASTNAME, OLD_EMAIL,
                               OLD_PHONE_NUMBER, OLD_ACCOUNT_CREATION_DATE, OLD_SUBSCRIBER, OLD_ACTIVE)
    VALUES (CURTIME(), 'UPDATE', OLD.id, NEW.NAME, NEW.LASTNAME, NEW.EMAIL, NEW.PHONE_NUMBER, NEW.ACCOUNT_CREATION_DATE,
            NEW.SUBSCRIBER, NEW.ACTIVE, OLD.NAME, OLD.LASTNAME, OLD.EMAIL, OLD.PHONE_NUMBER, OLD.ACCOUNT_CREATION_DATE,
            OLD.SUBSCRIBER, OLD.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER TOURS_UPDATE
    AFTER UPDATE
    ON TOURS
    FOR EACH ROW
BEGIN
    INSERT INTO TOURS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_NAME, NEW_COUNTRY, NEW_DESCRIPTION, NEW_START_DATE,
                           NEW_END_DATE, NEW_START_LOCATION, NEW_END_LOCATION, NEW_PRICE_EURO, NEW_ACTIVE, OLD_NAME,
                           OLD_COUNTRY, OLD_DESCRIPTION, OLD_START_DATE, OLD_END_DATE, OLD_START_LOCATION,
                           OLD_END_LOCATION, OLD_PRICE_EURO, OLD_ACTIVE)
    VALUES (CURTIME(), 'UPDATE', OLD.id, NEW.NAME, NEW.COUNTRY, NEW.DESCRIPTION, NEW.START_DATE, NEW.END_DATE,
            NEW.START_LOCATION, NEW.END_LOCATION, NEW.PRICE_EURO, NEW.ACTIVE, OLD.NAME, OLD.COUNTRY, OLD.DESCRIPTION,
            OLD.START_DATE, OLD.END_DATE, OLD.START_LOCATION, OLD.END_LOCATION, OLD.PRICE_EURO, OLD.ACTIVE);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER ATTRACTIONS_UPDATE
    AFTER UPDATE
    ON ATTRACTIONS
    FOR EACH ROW
BEGIN
    INSERT INTO ATTRACTIONS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_LOCATION_ID, NEW_CITY, NEW_NAME, NEW_DESCRIPTION,
                                 NEW_CATEGORY, NEW_TITLE, NEW_PRICE_EURO, NEW_ACTIVE, OLD_LOCATION_ID, OLD_CITY,
                                 OLD_NAME, OLD_DESCRIPTION, OLD_CATEGORY, OLD_TITLE, OLD_PRICE_EURO, OLD_ACTIVE)
    VALUES (CURTIME(), 'UPDATE', OLD.id, NEW.LOCATION_ID, NEW.CITY, NEW.NAME, NEW.DESCRIPTION, NEW.CATEGORY, NEW.TITLE,
            NEW.PRICE_EURO, NEW.ACTIVE, OLD.LOCATION_ID, OLD.CITY, OLD.NAME, OLD.DESCRIPTION, OLD.CATEGORY, OLD.TITLE,
            OLD.PRICE_EURO, OLD.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER RESERVATIONS_UPDATE
    AFTER UPDATE
    ON RESERVATIONS
    FOR EACH ROW
BEGIN
    INSERT INTO RESERVATIONS_AUD (EVENT_DATE, EVENT_TYPE, id, NEW_TOUR_ID, NEW_CUSTOMER_ID, NEW_RESERVATION_DATE,
                                  NEW_PAYMENT_STATUS, NEW_RESERVATION_STATUS, NEW_ACTIVE, OLD_TOUR_ID, OLD_CUSTOMER_ID,
                                  OLD_RESERVATION_DATE, OLD_PAYMENT_STATUS, OLD_RESERVATION_STATUS, OLD_ACTIVE)
    VALUES (CURTIME(), 'UPDATE', OLD.id, NEW.TOUR_ID, NEW.CUSTOMER_ID, NEW.RESERVATION_DATE, NEW.PAYMENT_STATUS,
            NEW.RESERVATION_STATUS, NEW.ACTIVE, OLD.TOUR_ID, OLD.CUSTOMER_ID, OLD.RESERVATION_DATE, OLD.PAYMENT_STATUS,
            OLD.RESERVATION_STATUS, OLD.ACTIVE);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER CUSTOMERS_DELETE
    AFTER DELETE
    ON CUSTOMERS
    FOR EACH ROW
BEGIN
    INSERT INTO CUSTOMERS_AUD (EVENT_DATE, EVENT_TYPE, id)
        VALUE (CURTIME(), 'DELETE', OLD.id);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER TOURS_DELETE
    AFTER DELETE
    ON TOURS
    FOR EACH ROW
BEGIN
    INSERT INTO TOURS_AUD (EVENT_DATE, EVENT_TYPE, id)
        VALUE (CURTIME(), 'DELETE', OLD.id);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER ATTRACTIONS_DELETE
    AFTER DELETE
    ON ATTRACTIONS
    FOR EACH ROW
BEGIN
    INSERT INTO ATTRACTIONS_AUD (EVENT_DATE, EVENT_TYPE, id)
        VALUE (CURTIME(), 'DELETE', OLD.id);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER RESERVATIONS_DELETE
    AFTER DELETE
    ON RESERVATIONS
    FOR EACH ROW
BEGIN
    INSERT INTO RESERVATIONS_AUD (EVENT_DATE, EVENT_TYPE, id)
        VALUE (CURTIME(), 'DELETE', OLD.id);
END $$

DELIMITER ;