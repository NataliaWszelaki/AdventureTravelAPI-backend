DROP TABLE IF EXISTS RESERVATIONS, CUSTOMERS, ATTRACTIONS, TOURS, JOIN_RESERVATION_ATTRACTION;

CREATE TABLE CUSTOMERS
(
    id                    BIGINT AUTO_INCREMENT,
    NAME                  VARCHAR(255) NOT NULL,
    LASTNAME              VARCHAR(255) NOT NULL,
    EMAIL                 VARCHAR(255) NOT NULL,
    PHONE_NUMBER          INT          NOT NULL,
    ACCOUNT_CREATION_DATE DATE         NOT NULL,
    SUBSCRIBER            BOOLEAN      NOT NULL,
    ACTIVE                BOOLEAN      NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE TOURS
(
    id             BIGINT AUTO_INCREMENT,
    NAME           VARCHAR(255) NOT NULL,
    COUNTRY        VARCHAR(255) NOT NULL,
    DESCRIPTION    VARCHAR(255) NOT NULL,
    START_DATE     DATE         NOT NULL,
    END_DATE       DATE         NOT NULL,
    START_LOCATION VARCHAR(255) NOT NULL,
    END_LOCATION   VARCHAR(255) NOT NULL,
    PRICE_EURO     INT          NOT NULL,
    ACTIVE         BOOLEAN      NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE ATTRACTIONS
(
    id          BIGINT AUTO_INCREMENT,
    LOCATION_ID INT          NOT NULL,
    CITY        VARCHAR(255) NOT NULL,
    NAME        VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CATEGORY    VARCHAR(255) NOT NULL,
    TITLE       VARCHAR(255) NOT NULL,
    PRICE_EURO  INT          NOT NULL,
    ACTIVE      BOOLEAN      NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE RESERVATIONS
(
    id                 BIGINT AUTO_INCREMENT,
    TOUR_ID            BIGINT                                                 NOT NULL,
    CUSTOMER_ID        BIGINT                                                 NOT NULL,
    RESERVATION_DATE   DATE                                                   NOT NULL,
    PAYMENT_STATUS     ENUM ('PENDING','CONFIRMED','CANCELED')                NOT NULL,
    RESERVATION_STATUS ENUM ('NEW','PENDING','CONFIRMED','CANCELED','CLOSED') NOT NULL,
    ACTIVE             BOOLEAN                                                NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (TOUR_ID) REFERENCES TOURS (id),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (id)
);

CREATE TABLE JOIN_RESERVATION_ATTRACTION
(
    RESERVATION_ID BIGINT NOT NULL,
    ATTRACTION_ID  BIGINT NOT NULL,
    PRIMARY KEY (RESERVATION_ID, ATTRACTION_ID),
    FOREIGN KEY (RESERVATION_ID) REFERENCES RESERVATIONS (id),
    FOREIGN KEY (ATTRACTION_ID) REFERENCES ATTRACTIONS (id)
);

DROP TABLE IF EXISTS RATES_EXCHANGE;

CREATE TABLE RATES_EXCHANGE
(
    id                 BIGINT AUTO_INCREMENT,
    EURO_TO_PLN        DOUBLE NOT NULL,
    RATE_EXCHANGE_DATE DATE   NOT NULL,
    PRIMARY KEY (id)
);

DROP TABLE IF EXISTS CURRENCYAPI_STATUS;

CREATE TABLE CURRENCYAPI_STATUS
(
    id                BIGINT AUTO_INCREMENT,
    TOTAL             INT  NOT NULL,
    USED              INT  NOT NULL,
    REMAINING         INT  NOT NULL,
    CHECK_STATUS_DATE DATE NOT NULL,
    PRIMARY KEY (id)
);